version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: alive-human-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: alive-human
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: alive-human-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: alive-human-backend
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgres://postgres:postgres@postgres:5432/alive-human
      REDIS_URL: redis://redis:6379
    ports:
      - "3000:3000"
    volumes:
      - ./packages/backend:/app/packages/backend
      - ./packages/shared:/app/packages/shared
      - node_modules_backend:/app/packages/backend/node_modules

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: alive-human-frontend
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://backend:3000
    ports:
      - "3001:3000"
    volumes:
      - ./packages/frontend:/app/packages/frontend
      - ./packages/shared:/app/packages/shared
      - node_modules_frontend:/app/packages/frontend/node_modules

  admin:
    build:
      context: .
      dockerfile: Dockerfile.admin
    container_name: alive-human-admin
    depends_on:
      - backend
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://backend:3000
    ports:
      - "3002:3000"
    volumes:
      - ./packages/admin:/app/packages/admin
      - ./packages/shared:/app/packages/shared
      - node_modules_admin:/app/packages/admin/node_modules

volumes:
  postgres_data:
  redis_data:
  node_modules_backend:
  node_modules_frontend:
  node_modules_admin: