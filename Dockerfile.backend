FROM node:20-alpine AS base

# Set working directory
WORKDIR /app

# Install dependencies only when needed
FROM base AS deps
COPY package.json yarn.lock ./
COPY packages/shared/package.json ./packages/shared/package.json
COPY packages/backend/package.json ./packages/backend/package.json

RUN yarn install --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the project
RUN yarn workspace @alive-human/shared build && \
    yarn workspace @alive-human/backend build

# Production image, copy all the files and run the app
FROM base AS runner

# Don't run production as root
RUN addgroup --system --gid 1001 nodejs && \
    adduser --system --uid 1001 nestjs
USER nestjs

COPY --from=builder --chown=nestjs:nodejs /app/packages/shared/dist /app/packages/shared/dist
COPY --from=builder --chown=nestjs:nodejs /app/packages/shared/package.json /app/packages/shared/package.json
COPY --from=builder --chown=nestjs:nodejs /app/packages/backend/dist /app/packages/backend/dist
COPY --from=builder --chown=nestjs:nodejs /app/packages/backend/package.json /app/packages/backend/package.json

WORKDIR /app/packages/backend

ENV NODE_ENV production

EXPOSE 3000

CMD ["node", "dist/main"]

# Development stage for hot reloading
FROM base AS development
COPY --from=deps /app/node_modules ./node_modules
COPY . .

WORKDIR /app

# Set environment variables
ENV NODE_ENV development

# Expose port
EXPOSE 3000

# Run development mode with hot reloading
CMD ["yarn", "workspace", "@alive-human/backend", "dev"]